document.addEventListener('DOMContentLoaded', function() {
    // –ê–Ω–∏–º–∞—Ü–∏—è –∑–∞–≥—Ä—É–∑–∫–∏
    const animateOnLoad = () => {
        const elements = document.querySelectorAll('.item-card, .case-card, .nav-item');
        elements.forEach((element, index) => {
            element.style.opacity = '0';
            element.style.transform = 'translateY(20px)';
            
            setTimeout(() => {
                element.style.transition = 'all 0.5s ease';
                element.style.opacity = '1';
                element.style.transform = 'translateY(0)';
            }, index * 100);
        });
    };
    
    setTimeout(animateOnLoad, 500);
    
    // –ù–∞–≤–∏–≥–∞—Ü–∏—è –ø–æ —Å–µ–∫—Ü–∏—è–º
    const navItems = document.querySelectorAll('.nav-item');
const contentSections = document.querySelectorAll('.content-section');

navItems.forEach(item => {
    item.addEventListener('click', function() {
        const targetSection = this.getAttribute('data-section');
        
        // –£–±–∏—Ä–∞–µ–º –∞–∫—Ç–∏–≤–Ω—ã–π –∫–ª–∞—Å—Å —É –≤—Å–µ—Ö —ç–ª–µ–º–µ–Ω—Ç–æ–≤
        navItems.forEach(nav => nav.classList.remove('active'));
        contentSections.forEach(section => section.classList.remove('active'));
        
        // –î–æ–±–∞–≤–ª—è–µ–º –∞–∫—Ç–∏–≤–Ω—ã–π –∫–ª–∞—Å—Å –∫ –≤—ã–±—Ä–∞–Ω–Ω–æ–º—É —ç–ª–µ–º–µ–Ω—Ç—É
        this.classList.add('active');
        document.getElementById(targetSection).classList.add('active');
    });
});
function openCase(caseType) {
    console.log('üéØ –û—Ç–∫—Ä—ã—Ç–∏–µ –∫–µ–π—Å–∞:', caseType);
    window.location.href = `case-opening.html?case=${caseType}`;
}
    
    // –ü–æ–∏—Å–∫
    const searchInput = document.querySelector('.search-filter');
    searchInput.addEventListener('input', function(e) {
        const searchTerm = e.target.value.toLowerCase();
        const items = document.querySelectorAll('.item-card');
        
        items.forEach(item => {
            const text = item.textContent.toLowerCase();
            if (text.includes(searchTerm)) {
                item.style.display = 'block';
            } else {
                item.style.display = 'none';
            }
        });
    });
    
    // –≠—Ñ—Ñ–µ–∫—Ç—ã –ø—Ä–∏ –Ω–∞–≤–µ–¥–µ–Ω–∏–∏ –Ω–∞ –∫–∞—Ä—Ç–æ—á–∫–∏
    const cards = document.querySelectorAll('.item-card, .case-card');
    cards.forEach(card => {
        card.addEventListener('mouseenter', function() {
            this.style.transform = this.classList.contains('case-card') 
                ? 'scale(1.05)' 
                : 'translateY(-5px)';
        });
        
        card.addEventListener('mouseleave', function() {
            this.style.transform = 'none';
        });
    });
    
    // –°–ª–∞–π–¥–µ—Ä
    const slider = document.querySelector('.slider');
    const slides = document.querySelectorAll('.slide');
    const dots = document.querySelectorAll('.dot');
    const prevBtn = document.querySelector('.prev');
    const nextBtn = document.querySelector('.next');
    
    let currentSlide = 0;
    const slideCount = slides.length;
    
    function showSlide(index) {
        // –°–∫—Ä—ã–≤–∞–µ–º –≤—Å–µ —Å–ª–∞–π–¥—ã
        slides.forEach(slide => slide.classList.remove('active'));
        dots.forEach(dot => dot.classList.remove('active'));
        
        // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –≤—ã–±—Ä–∞–Ω–Ω—ã–π —Å–ª–∞–π–¥
        slides[index].classList.add('active');
        dots[index].classList.add('active');
        currentSlide = index;
    }
    
    function nextSlide() {
        let nextIndex = (currentSlide + 1) % slideCount;
        showSlide(nextIndex);
    }
    
    function prevSlide() {
        let prevIndex = (currentSlide - 1 + slideCount) % slideCount;
        showSlide(prevIndex);
    }
    
    // –û–±—Ä–∞–±–æ—Ç—á–∏–∫–∏ –¥–ª—è –∫–Ω–æ–ø–æ–∫ —Å–ª–∞–π–¥–µ—Ä–∞
    nextBtn.addEventListener('click', nextSlide);
    prevBtn.addEventListener('click', prevSlide);
    
    // –û–±—Ä–∞–±–æ—Ç—á–∏–∫–∏ –¥–ª—è —Ç–æ—á–µ–∫
    dots.forEach((dot, index) => {
        dot.addEventListener('click', () => showSlide(index));
    });
    
    // –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–æ–µ –ø–µ—Ä–µ–∫–ª—é—á–µ–Ω–∏–µ —Å–ª–∞–π–¥–æ–≤
    let slideInterval = setInterval(nextSlide, 5000);
    
    // –û—Å—Ç–∞–Ω–æ–≤–∫–∞ –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–æ–≥–æ –ø–µ—Ä–µ–∫–ª—é—á–µ–Ω–∏—è –ø—Ä–∏ –Ω–∞–≤–µ–¥–µ–Ω–∏–∏
    const sliderContainer = document.querySelector('.slider-container');
    sliderContainer.addEventListener('mouseenter', () => clearInterval(slideInterval));
    sliderContainer.addEventListener('mouseleave', () => {
        slideInterval = setInterval(nextSlide, 5000);
    });
    
    // –í–∏–¥–µ–æ–ø–ª–µ–µ—Ä
    const video = document.getElementById('main-video');
    const playPauseBtn = document.querySelector('.play-pause');
    const volumeBtn = document.querySelector('.volume-btn');
    const volumeSlider = document.querySelector('.volume-slider');
    const progressBar = document.querySelector('.progress-bar');
    const currentTimeEl = document.querySelector('.current-time');
    const durationEl = document.querySelector('.duration');
    const fullscreenBtn = document.querySelector('.fullscreen-btn');
    
    // –§–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –≤—Ä–µ–º–µ–Ω–∏
    function formatTime(seconds) {
        let mins = Math.floor(seconds / 60);
        let secs = Math.floor(seconds % 60);
        return `${mins}:${secs < 10 ? '0' : ''}${secs}`;
    }
    
    // –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ –≤—Ä–µ–º–µ–Ω–∏ –≤–∏–¥–µ–æ
    video.addEventListener('loadedmetadata', function() {
        durationEl.textContent = formatTime(video.duration);
        progressBar.max = video.duration;
    });
    
    video.addEventListener('timeupdate', function() {
        currentTimeEl.textContent = formatTime(video.currentTime);
        progressBar.value = video.currentTime;
    });
    
    // –ü–µ—Ä–µ–º–æ—Ç–∫–∞ –≤–∏–¥–µ–æ
    progressBar.addEventListener('input', function() {
        video.currentTime = this.value;
    });
    
    // –£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –≤–æ—Å–ø—Ä–æ–∏–∑–≤–µ–¥–µ–Ω–∏–µ–º
    playPauseBtn.addEventListener('click', function() {
        if (video.paused) {
            video.play();
            playPauseBtn.innerHTML = '<i class="fas fa-pause"></i>';
        } else {
            video.pause();
            playPauseBtn.innerHTML = '<i class="fas fa-play"></i>';
        }
    });
    
    video.addEventListener('click', function() {
        if (video.paused) {
            video.play();
            playPauseBtn.innerHTML = '<i class="fas fa-pause"></i>';
        } else {
            video.pause();
            playPauseBtn.innerHTML = '<i class="fas fa-play"></i>';
        }
    });
    
    // –£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –≥—Ä–æ–º–∫–æ—Å—Ç—å—é
    volumeBtn.addEventListener('click', function() {
        if (video.volume > 0) {
            video.volume = 0;
            volumeBtn.innerHTML = '<i class="fas fa-volume-mute"></i>';
            volumeSlider.value = 0;
        } else {
            video.volume = 1;
            volumeBtn.innerHTML = '<i class="fas fa-volume-up"></i>';
            volumeSlider.value = 100;
        }
    });
    
    volumeSlider.addEventListener('input', function() {
        video.volume = this.value / 100;
        if (video.volume === 0) {
            volumeBtn.innerHTML = '<i class="fas fa-volume-mute"></i>';
        } else {
            volumeBtn.innerHTML = '<i class="fas fa-volume-up"></i>';
        }
    });
    
    // –ü–æ–ª–Ω–æ—ç–∫—Ä–∞–Ω–Ω—ã–π —Ä–µ–∂–∏–º
    fullscreenBtn.addEventListener('click', function() {
        if (!document.fullscreenElement) {
            video.parentElement.requestFullscreen().catch(err => {
                console.log(`–û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–µ—Ä–µ—Ö–æ–¥–µ –≤ –ø–æ–ª–Ω–æ—ç–∫—Ä–∞–Ω–Ω—ã–π —Ä–µ–∂–∏–º: ${err.message}`);
            });
            fullscreenBtn.innerHTML = '<i class="fas fa-compress"></i>';
        } else {
            document.exitFullscreen();
            fullscreenBtn.innerHTML = '<i class="fas fa-expand"></i>';
        }
    });
    
    // –ì–æ—Ä—è—á–∏–µ –∫–ª–∞–≤–∏—à–∏ –¥–ª—è –≤–∏–¥–µ–æ
    document.addEventListener('keydown', function(e) {
        if (e.target === document.body) {
            switch(e.key) {
                case ' ':
                case 'k':
                    e.preventDefault();
                    if (video.paused) {
                        video.play();
                        playPauseBtn.innerHTML = '<i class="fas fa-pause"></i>';
                    } else {
                        video.pause();
                        playPauseBtn.innerHTML = '<i class="fas fa-play"></i>';
                    }
                    break;
                case 'f':
                    e.preventDefault();
                    if (!document.fullscreenElement) {
                        video.parentElement.requestFullscreen();
                        fullscreenBtn.innerHTML = '<i class="fas fa-compress"></i>';
                    } else {
                        document.exitFullscreen();
                        fullscreenBtn.innerHTML = '<i class="fas fa-expand"></i>';
                    }
                    break;
                case 'm':
                    e.preventDefault();
                    if (video.volume > 0) {
                        video.volume = 0;
                        volumeBtn.innerHTML = '<i class="fas fa-volume-mute"></i>';
                        volumeSlider.value = 0;
                    } else {
                        video.volume = 1;
                        volumeBtn.innerHTML = '<i class="fas fa-volume-up"></i>';
                        volumeSlider.value = 100;
                    }
                    break;
                case 'ArrowLeft':
                    e.preventDefault();
                    video.currentTime -= 5;
                    break;
                case 'ArrowRight':
                    e.preventDefault();
                    video.currentTime += 5;
                    break;
            }
        }
    });
    
    // –ú–æ–¥–∞–ª—å–Ω–æ–µ –æ–∫–Ω–æ –ø–æ–ø–æ–ª–Ω–µ–Ω–∏—è –±–∞–ª–∞–Ω—Å–∞
    const balanceBtn = document.querySelector('.balance-btn');
    const modal = document.getElementById('balance-modal');
    const closeModal = document.querySelector('.close-modal');
    const balanceForm = document.getElementById('balance-form');
    const submitBtn = document.getElementById('submit-btn');
    
    // –û—Ç–∫—Ä—ã—Ç–∏–µ –º–æ–¥–∞–ª—å–Ω–æ–≥–æ –æ–∫–Ω–∞
    balanceBtn.addEventListener('click', function() {
        modal.style.display = 'block';
    });
    
    // –ó–∞–∫—Ä—ã—Ç–∏–µ –º–æ–¥–∞–ª—å–Ω–æ–≥–æ –æ–∫–Ω–∞
    closeModal.addEventListener('click', function() {
        modal.style.display = 'none';
    });
    
    // –ó–∞–∫—Ä—ã—Ç–∏–µ –º–æ–¥–∞–ª—å–Ω–æ–≥–æ –æ–∫–Ω–∞ –ø—Ä–∏ –∫–ª–∏–∫–µ –≤–Ω–µ –µ–≥–æ
    window.addEventListener('click', function(e) {
        if (e.target === modal) {
            modal.style.display = 'none';
        }
    });
    
    // –í–∞–ª–∏–¥–∞—Ü–∏—è —Ñ–æ—Ä–º—ã
    const nameInput = document.getElementById('name');
    const emailInput = document.getElementById('email');
    const phoneInput = document.getElementById('phone');
    const genderInputs = document.querySelectorAll('input[name="gender"]');
    const amountInput = document.getElementById('amount');
    
    // –†–µ–≥—É–ª—è—Ä–Ω—ã–µ –≤—ã—Ä–∞–∂–µ–Ω–∏—è –¥–ª—è –≤–∞–ª–∏–¥–∞—Ü–∏–∏
    const nameRegex = /^[A-Za-z–ê-–Ø–∞-—è–Å—ë\s]{1,}$/;
    const emailRegex = /^[A-Za-z0-9._%+-]{1,20}@[A-Za-z0-9.-]+\.[A-Za-z]{2,}$/;
    const phoneRegex = /^(\+375-\d{2}-\d{3}-\d{2}-\d{2}|8\(375\)\d{2}-\d{3}-\d{2}-\d{2})$/;
    
    // –§—É–Ω–∫—Ü–∏—è –ø—Ä–æ–≤–µ—Ä–∫–∏ –≤–∞–ª–∏–¥–Ω–æ—Å—Ç–∏ —Ñ–æ—Ä–º—ã
    function checkFormValidity() {
        const isNameValid = nameRegex.test(nameInput.value);
        const isEmailValid = emailRegex.test(emailInput.value);
        const isPhoneValid = phoneRegex.test(phoneInput.value);
        const isGenderSelected = Array.from(genderInputs).some(input => input.checked);
        const isAmountValid = amountInput.value && amountInput.value > 0;
        
        return isNameValid && isEmailValid && isPhoneValid && isGenderSelected && isAmountValid;
    }
    
    // –§—É–Ω–∫—Ü–∏—è –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è —Å–æ—Å—Ç–æ—è–Ω–∏—è –∫–Ω–æ–ø–∫–∏ –æ—Ç–ø—Ä–∞–≤–∫–∏
    function updateSubmitButton() {
        submitBtn.disabled = !checkFormValidity();
    }
    
    // –í–∞–ª–∏–¥–∞—Ü–∏—è –∏–º–µ–Ω–∏
    nameInput.addEventListener('input', function() {
        const errorElement = this.parentElement.querySelector('.error-message');
        if (!nameRegex.test(this.value)) {
            errorElement.textContent = '–ò–º—è –¥–æ–ª–∂–Ω–æ —Å–æ–¥–µ—Ä–∂–∞—Ç—å –Ω–µ –º–µ–Ω–µ–µ 1 —Å–∏–º–≤–æ–ª–æ–≤ (—Ç–æ–ª—å–∫–æ –±—É–∫–≤—ã –∏ –ø—Ä–æ–±–µ–ª—ã)';
        } else {
            errorElement.textContent = '';
        }
        updateSubmitButton();
    });
    
    // –í–∞–ª–∏–¥–∞—Ü–∏—è email
    emailInput.addEventListener('input', function() {
        const errorElement = this.parentElement.querySelector('.error-message');
        if (!emailRegex.test(this.value)) {
            errorElement.textContent = '–í–≤–µ–¥–∏—Ç–µ –∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã–π email (–Ω–µ –±–æ–ª–µ–µ 20 —Å–∏–º–≤–æ–ª–æ–≤ –¥–æ @)';
        } else {
            errorElement.textContent = '';
        }
        updateSubmitButton();
    });
    
    // –í–∞–ª–∏–¥–∞—Ü–∏—è —Ç–µ–ª–µ—Ñ–æ–Ω–∞
    phoneInput.addEventListener('input', function() {
        const errorElement = this.parentElement.querySelector('.error-message');
        if (!phoneRegex.test(this.value)) {
            errorElement.textContent = '–§–æ—Ä–º–∞—Ç: +375-XX-XXX-XX-XX –∏–ª–∏ 8(375)XX-XXX-XX-XX';
        } else {
            errorElement.textContent = '';
        }
        updateSubmitButton();
    });
    
    // –í–∞–ª–∏–¥–∞—Ü–∏—è –ø–æ–ª–∞
    genderInputs.forEach(input => {
        input.addEventListener('change', function() {
            const errorElement = this.closest('.form-group').querySelector('.error-message');
            errorElement.textContent = '';
            updateSubmitButton();
        });
    });
    
    // –í–∞–ª–∏–¥–∞—Ü–∏—è —Å—É–º–º—ã
    amountInput.addEventListener('input', function() {
        const errorElement = this.parentElement.querySelector('.error-message');
        if (!this.value || this.value <= 0) {
            errorElement.textContent = '–í–≤–µ–¥–∏—Ç–µ –∫–æ—Ä—Ä–µ–∫—Ç–Ω—É—é —Å—É–º–º—É';
        } else {
            errorElement.textContent = '';
        }
        updateSubmitButton();
    });
    
    // –û–±—Ä–∞–±–æ—Ç–∫–∞ –æ—Ç–ø—Ä–∞–≤–∫–∏ —Ñ–æ—Ä–º—ã
    balanceForm.addEventListener('submit', function(e) {
        e.preventDefault();
        
        if (checkFormValidity()) {
            // –ó–¥–µ—Å—å –æ–±—ã—á–Ω–æ –æ—Ç–ø—Ä–∞–≤–∫–∞ –¥–∞–Ω–Ω—ã—Ö –Ω–∞ —Å–µ—Ä–≤–µ—Ä
            alert('–ë–∞–ª–∞–Ω—Å —É—Å–ø–µ—à–Ω–æ –ø–æ–ø–æ–ª–Ω–µ–Ω!');
            modal.style.display = 'none';
            balanceForm.reset();
            updateSubmitButton();
        }
    });
    
    // –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è —Å–æ—Å—Ç–æ—è–Ω–∏—è –∫–Ω–æ–ø–∫–∏
    updateSubmitButton();
    
});
// –°–∏—Å—Ç–µ–º–∞ –æ—Ç–∫—Ä—ã—Ç–∏—è –∫–µ–π—Å–æ–≤
class CaseOpeningSystem {
    constructor() {
        this.balance = 1000;
        this.selectedCase = null;
        this.inventory = [];
        this.caseItems = {
            mirage: [
                { name: "AK-47 | –ö—Ä–∞—Å–Ω–∞—è –ª–∏–Ω–∏—è", rarity: "classified", image: "images/ak47-redline.jpg", probability: 3 },
                { name: "AWP | –≠–ª–µ–∫—Ç—Ä–∏—á–µ—Å–∫–∏–π hive", rarity: "restricted", image: "images/awp-electric.jpg", probability: 8 },
                { name: "M4A4 | –ó–µ–≤—Å-–ö—Å–µ–Ω–æ", rarity: "mil-spec", image: "images/m4a4-xeno.jpg", probability: 15 },
                { name: "USP-S | –ö–∏–ª–∫–æ–Ω—Ñ—ë—Ä–º–¥", rarity: "industrial", image: "images/usp-kill.jpg", probability: 25 },
                { name: "Glock-18 | –í–æ–¥–Ω—ã–µ —ç–ª–µ–º–µ–Ω—Ç—ã", rarity: "consumer", image: "images/glock-water.jpg", probability: 35 },
                { name: "–ù–æ–∂ | –ë–∞–±–æ—á–∫–∞ | –£–ª—å—Ç—Ä–∞—Ñ–∏–æ–ª–µ—Ç", rarity: "covert", image: "images/knife-butterfly.jpg", probability: 1 }
            ],
            nuke: [
                { name: "AWP | –î—Ä–∞–∫–æ–Ω –õ–æ—Ä–∞", rarity: "covert", image: "images/awp-dragon.jpg", probability: 2 },
                { name: "M4A1-S | –ó–æ–ª–æ—Ç–∞—è –∫–∞—Ç—É—à–∫–∞", rarity: "classified", image: "images/m4a1-gold.jpg", probability: 5 },
                { name: "Desert Eagle | –ö–æ—Ä–∏—á–Ω–µ–≤—ã–π –∂—É–∫", rarity: "restricted", image: "images/deagle-beetle.jpg", probability: 10 },
                { name: "P90 | –•–æ–ª–æ–¥–Ω–æ–µ –∫—Ä–æ–≤–æ—Ç–µ—á–µ–Ω–∏–µ", rarity: "mil-spec", image: "images/p90-cold.jpg", probability: 20 },
                { name: "MP9 | –ë–∏–ª—å—è—Ä–¥–Ω–∞—è", rarity: "industrial", image: "images/mp9-billiard.jpg", probability: 30 },
                { name: "–ù–æ–∂ | –°–∫–µ–ª–µ—Ç–Ω—ã–π | –ú–∞—Ç–æ–≤—ã–π", rarity: "covert", image: "images/knife-skeleton.jpg", probability: 1 }
            ],
            ancient: [
                { name: "AK-47 | –û–≥–Ω–µ–Ω–Ω–∞—è –∑–º–µ—è", rarity: "covert", image: "images/ak47-firesnake.jpg", probability: 1 },
                { name: "AWP | –ì–∏–ø–µ—Ä–∑–≤–µ—Ä—å", rarity: "classified", image: "images/awp-hyperbeast.jpg", probability: 4 },
                { name: "M4A4 | –ö–æ—Ä–æ–ª—å –¥—Ä–∞–∫–æ–Ω–æ–≤", rarity: "restricted", image: "images/m4a4-dragonking.jpg", probability: 8 },
                { name: "P2000 | –ò–º–ø–µ—Ä—Å–∫–∏–π –¥—Ä–∞–∫–æ–Ω", rarity: "mil-spec", image: "images/p2000-dragon.jpg", probability: 15 },
                { name: "UMP-45 | –û—Å—Ü–∏–ª–ª—è—Ç–æ—Ä", rarity: "industrial", image: "images/ump-oscillator.jpg", probability: 25 },
                { name: "–ù–æ–∂ | –ö–æ–≥–æ—Ç—å | –¢–∏–≥—Ä–æ–≤—ã–π –∑—É–±", rarity: "covert", image: "images/knife-tigertooth.jpg", probability: 1 }
            ]
        };
        
        this.casePrices = {
            mirage: 100,
            nuke: 150,
            ancient: 200
        };
        
        this.init();
    }
    
    init() {
        this.setupEventListeners();
        this.updateBalanceDisplay();
        this.updateInventory();
    }
    
    setupEventListeners() {
        // –í—ã–±–æ—Ä –∫–µ–π—Å–∞
        document.querySelectorAll('.case-option').forEach(option => {
            option.addEventListener('click', (e) => {
                this.selectCase(e.currentTarget.dataset.case);
            });
        });
        
        // –û—Ç–∫—Ä—ã—Ç–∏–µ –∫–µ–π—Å–∞
        document.getElementById('open-case-btn').addEventListener('click', () => {
            this.openCase();
        });
    }
    
    selectCase(caseType) {
        this.selectedCase = caseType;
        
        // –£–±–∏—Ä–∞–µ–º –≤—ã–¥–µ–ª–µ–Ω–∏–µ —É –≤—Å–µ—Ö –∫–µ–π—Å–æ–≤
        document.querySelectorAll('.case-option').forEach(option => {
            option.classList.remove('active');
        });
        
        // –í—ã–¥–µ–ª—è–µ–º –≤—ã–±—Ä–∞–Ω–Ω—ã–π –∫–µ–π—Å
        document.querySelector(`[data-case="${caseType}"]`).classList.add('active');
        
        // –û–±–Ω–æ–≤–ª—è–µ–º –ø—Ä–µ–≤—å—é
        document.getElementById('case-preview-img').src = `images/${caseType}-case.jpg`;
        document.getElementById('selected-case-name').textContent = `${caseType.toUpperCase()} CASE`;
        document.getElementById('selected-case-price').textContent = `${this.casePrices[caseType]} ‚ÇΩ`;
        
        // –ê–∫—Ç–∏–≤–∏—Ä—É–µ–º –∫–Ω–æ–ø–∫—É –æ—Ç–∫—Ä—ã—Ç–∏—è
        document.getElementById('open-case-btn').disabled = false;
    }
    
    openCase() {
        if (!this.selectedCase) {
            alert('–í—ã–±–µ—Ä–∏—Ç–µ –∫–µ–π—Å –¥–ª—è –æ—Ç–∫—Ä—ã—Ç–∏—è!');
            return;
        }
        
        const casePrice = this.casePrices[this.selectedCase];
        
        if (this.balance < casePrice) {
            alert('–ù–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ —Å—Ä–µ–¥—Å—Ç–≤!');
            return;
        }
        
        // –°–ø–∏—à–µ–º –¥–µ–Ω—å–≥–∏
        this.balance -= casePrice;
        this.updateBalanceDisplay();
        
        // –ó–∞–ø—É—Å–∫–∞–µ–º –∞–Ω–∏–º–∞—Ü–∏—é –æ—Ç–∫—Ä—ã—Ç–∏—è
        this.startOpeningAnimation();
    }
    
    startOpeningAnimation() {
        const animationElement = document.getElementById('opening-animation');
        const openBtn = document.getElementById('open-case-btn');
        
        // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –∞–Ω–∏–º–∞—Ü–∏—é
        animationElement.classList.remove('hidden');
        openBtn.disabled = true;
        
        // –ó–∞–ø—É—Å–∫–∞–µ–º –∞–Ω–∏–º–∞—Ü–∏—é –≤—Ä–∞—â–µ–Ω–∏—è
        const spinningItems = document.querySelector('.spinning-items');
        spinningItems.style.animation = 'spin 0.1s infinite linear';
        
        // –ß–µ—Ä–µ–∑ 2 —Å–µ–∫—É–Ω–¥—ã –æ—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –∏ –ø–æ–∫–∞–∑—ã–≤–∞–µ–º —Ä–µ–∑—É–ª—å—Ç–∞—Ç
        setTimeout(() => {
            this.stopAnimationAndShowResult();
        }, 2000);
    }
    
    stopAnimationAndShowResult() {
        const spinningItems = document.querySelector('.spinning-items');
        const resultItem = this.getRandomItem();
        
        // –û—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –∞–Ω–∏–º–∞—Ü–∏—é
        spinningItems.style.animation = 'none';
        
        // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –≤—ã–∏–≥—Ä–∞–Ω–Ω—ã–π –ø—Ä–µ–¥–º–µ—Ç
        this.showWonItem(resultItem);
        
        // –î–æ–±–∞–≤–ª—è–µ–º –ø—Ä–µ–¥–º–µ—Ç –≤ –∏–Ω–≤–µ–Ω—Ç–∞—Ä—å
        this.inventory.push(resultItem);
        this.updateInventory();
        
        // –ê–∫—Ç–∏–≤–∏—Ä—É–µ–º –∫–Ω–æ–ø–∫—É –æ—Ç–∫—Ä—ã—Ç–∏—è
        setTimeout(() => {
            document.getElementById('open-case-btn').disabled = false;
        }, 1000);
    }
    
    getRandomItem() {
        const items = this.caseItems[this.selectedCase];
        const totalProbability = items.reduce((sum, item) => sum + item.probability, 0);
        let random = Math.random() * totalProbability;
        
        for (const item of items) {
            random -= item.probability;
            if (random <= 0) {
                return { ...item };
            }
        }
        
        return items[items.length - 1];
    }
    
    showWonItem(item) {
        document.getElementById('won-item-img').src = item.image;
        document.getElementById('won-item-name').textContent = item.name;
        document.getElementById('won-item-rarity').textContent = this.getRarityText(item.rarity);
        document.getElementById('won-item-rarity').className = `item-rarity ${item.rarity}`;
    }
    
    getRarityText(rarity) {
        const rarityMap = {
            'consumer': '–û–±—ã—á–Ω—ã–π',
            'industrial': '–ü—Ä–æ–º—ã—à–ª–µ–Ω–Ω—ã–π',
            'mil-spec': '–ê—Ä–º–µ–π—Å–∫–∏–π',
            'restricted': '–ó–∞–ø—Ä–µ—â–µ–Ω–Ω—ã–π',
            'classified': '–°–µ–∫—Ä–µ—Ç–Ω—ã–π',
            'covert': '–¢–∞–π–Ω—ã–π'
        };
        return rarityMap[rarity] || rarity;
    }
    
    updateBalanceDisplay() {
        const balanceElement = document.querySelector('.balance-amount');
        if (balanceElement) {
            balanceElement.textContent = `${this.balance} ‚ÇΩ`;
        }
    }
    
    updateInventory() {
        const inventoryGrid = document.getElementById('inventory-grid');
        if (!inventoryGrid) return;
        
        inventoryGrid.innerHTML = '';
        
        this.inventory.forEach(item => {
            const itemElement = document.createElement('div');
            itemElement.className = 'inventory-item';
            itemElement.innerHTML = `
                <img src="${item.image}" alt="${item.name}">
                <div class="inventory-item-name">${item.name}</div>
                <div class="inventory-item-rarity ${item.rarity}">${this.getRarityText(item.rarity)}</div>
            `;
            inventoryGrid.appendChild(itemElement);
        });
    }
}

// –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è —Å–∏—Å—Ç–µ–º—ã –æ—Ç–∫—Ä—ã—Ç–∏—è –∫–µ–π—Å–æ–≤ –ø—Ä–∏ –∑–∞–≥—Ä—É–∑–∫–µ —Å—Ç—Ä–∞–Ω–∏—Ü—ã
document.addEventListener('DOMContentLoaded', function() {
    // –î–æ–±–∞–≤–ª—è–µ–º HTML –¥–ª—è –±–∞–ª–∞–Ω—Å–∞ –≤ —Å–µ–∫—Ü–∏—é –∫–æ–Ω—Ç—Ä–∞–∫—Ç–æ–≤
    const contractsSection = document.getElementById('contracts');
    if (contractsSection) {
        const balanceInfo = document.createElement('div');
        balanceInfo.className = 'balance-info';
        balanceInfo.innerHTML = `–ë–∞–ª–∞–Ω—Å: <span class="balance-amount">1000</span> ‚ÇΩ`;
        contractsSection.insertBefore(balanceInfo, contractsSection.firstChild.nextSibling);
    }
    
    // –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä—É–µ–º —Å–∏—Å—Ç–µ–º—É –æ—Ç–∫—Ä—ã—Ç–∏—è –∫–µ–π—Å–æ–≤
    window.caseSystem = new CaseOpeningSystem();
});
// –§—É–Ω–∫—Ü–∏—è –¥–ª—è –ø–µ—Ä–µ—Ö–æ–¥–∞ –Ω–∞ —Å—Ç—Ä–∞–Ω–∏—Ü—É –æ—Ç–∫—Ä—ã—Ç–∏—è –∫–µ–π—Å–∞
function openCase(caseType) {
    window.location.href = `case-opening.html?case=${caseType}`;
}